{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.scss","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","isNaN","FeedbackOptions","options","onLeaveFeedback","btnNamesArr","Object","keys","className","style","list__button","map","btmName","id","onClick","btn","charAt","toUpperCase","slice","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","prevGood","prevNeutral","prevBad","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,IAAM,6BAA6B,aAAe,wC,wICoCrDC,MAnCf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,mCACE,+BACE,6BACE,uCAAUJ,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,mDACqB,IAClBE,MAAMD,GAAsB,EAAIA,EAFnC,e,gBCWKE,MA1Bf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC5BC,EAAcC,OAAOC,KAAKJ,GAChC,OACE,mCACE,oBAAIK,UAAWC,IAAMC,aAArB,SACGL,EAAYM,KAAI,SAAAC,GAAO,OACtB,6BACE,wBACEC,GAAID,EACJE,QAASV,EACTI,UAAWC,IAAMM,IAHnB,SAKGH,EAAQI,OAAO,GAAGC,cAAgBL,EAAQM,MAAM,MAN5CN,WCKJO,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCIQC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,K,MC4DEC,MAtDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAO7B,EAAP,KAAa8B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAO5B,EAAP,KAAgB8B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAO3B,EAAP,KAAY8B,EAAZ,KAiBMC,EAAqB,WACzB,OAAOjC,EAAOC,EAAUC,GAO1B,OACE,sBAAKU,UAAU,gBAAf,UACE,cAAC,EAAD,CAASY,MAAM,wBAAf,SACE,cAAC,EAAD,CACEjB,QAAS,CAAEP,OAAMC,UAASC,OAC1BM,gBA5BY,SAAA0B,GAClB,IAAQjB,EAAOiB,EAAMC,OAAblB,GACR,MAAW,SAAPA,EACKa,GAAQ,SAAAM,GAAQ,OAAIA,EAAW,KAG7B,YAAPnB,EACKc,GAAW,SAAAM,GAAW,OAAIA,EAAc,KAGtC,QAAPpB,EACKe,GAAO,SAAAM,GAAO,OAAIA,EAAU,UADrC,OAsBE,cAAC,EAAD,CAASd,MAAM,aAAf,SACGS,IACC,cAAC,EAAD,CACEjC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO8B,IACP7B,mBAnBDmC,KAAKC,MAAOxC,EAAOiC,IAAwB,OAsB5C,cAAC,EAAD,CAAcN,QAAQ,4BCnDhCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a174b9e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__22Qew\",\"list__button\":\"FeedbackOptions_list__button__eue2s\"};","import PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <ul>\n        <li>\n          <p>Good: {good}</p>\n        </li>\n        <li>\n          <p>Neutral: {neutral}</p>\n        </li>\n        <li>\n          <p>Bad: {bad}</p>\n        </li>\n        <li>\n          <p>Total: {total}</p>\n        </li>\n        <li>\n          <p>\n            Positive feedback:{' '}\n            {isNaN(positivePercentage) ? 0 : positivePercentage}%\n          </p>\n        </li>\n      </ul>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nimport style from './FeedbackOptions.module.scss';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  const btnNamesArr = Object.keys(options);\n  return (\n    <>\n      <ul className={style.list__button}>\n        {btnNamesArr.map(btmName => (\n          <li key={btmName}>\n            <button\n              id={btmName}\n              onClick={onLeaveFeedback}\n              className={style.btn}\n            >\n              {btmName.charAt(0).toUpperCase() + btmName.slice(1)}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from 'react';\n\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nimport './App.css';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = event => {\n    const { id } = event.target;\n    if (id === 'good') {\n      return setGood(prevGood => prevGood + 1);\n    }\n\n    if (id === 'neutral') {\n      return setNeutral(prevNeutral => prevNeutral + 1);\n    }\n\n    if (id === 'bad') {\n      return setBad(prevBad => prevBad + 1);\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n\n  return (\n    <div className=\"App container\">\n      <Section title=\"Please leave Feedback\">\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={handleClick}\n        ></FeedbackOptions>\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          ></Statistics>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}